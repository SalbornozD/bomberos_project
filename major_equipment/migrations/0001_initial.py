# Generated by Django 5.2 on 2025-06-24 13:26

import django.db.models.deletion
import django.utils.timezone
import major_equipment.utils.validators
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('docs', '0001_initial'),
        ('firebrigade', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MaintenanceLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Descripción')),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de creación')),
                ('approved_by_command', models.BooleanField(default=False, verbose_name='Aprobado por Comandancia')),
                ('command_observations', models.TextField(blank=True, null=True, verbose_name='Observaciones de Comandancia')),
                ('command_reviewed_date', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de aprobación por comandancia')),
                ('approved_by_admin', models.BooleanField(default=False, verbose_name='Aprobado por Administración')),
                ('admin_observations', models.TextField(blank=True, null=True, verbose_name='Observaciones de Administración')),
                ('admin_reviewed_date', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de aprobación por administración')),
                ('editable', models.BooleanField(default=True, verbose_name='Editable')),
                ('deleted', models.BooleanField(default=False, verbose_name='Eliminado')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='maintenance_logs', to=settings.AUTH_USER_MODEL, verbose_name='Autor')),
                ('responsible_for_payment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='maintenance_logs', to='firebrigade.entity', verbose_name='Responsable de pago')),
                ('reviewed_by_admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='maintenance_logs_admin', to=settings.AUTH_USER_MODEL, verbose_name='Revisado por Administración')),
                ('reviewed_by_command', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='maintenance_logs_command', to=settings.AUTH_USER_MODEL, verbose_name='Revisado por Comandancia')),
            ],
            options={
                'verbose_name': 'Solicitud de mantención',
                'verbose_name_plural': 'Solicitudes de mantenciones',
                'permissions': [('view_own_maintenancerequests', 'Puede ver sus propias solicitudes'), ('view_company_maintenancerequests', 'Puede ver solicitudes de su compañía'), ('change_own_maintenancerequests', 'Puede editar sus propias solicitudes'), ('change_company_maintenancerequests', 'Puede editar solicitudes de su compañía'), ('delete_own_maintenancerequests', 'Puede eliminar sus propias solicitudes'), ('delete_company_maintenancerequests', 'Puede eliminar solicitudes de su compañía'), ('approve_maintenance_as_command', 'Puede aprobar solicitudes como Comandancia'), ('approve_maintenance_as_admin', 'Puede aprobar solicitudes como Administración')],
            },
        ),
        migrations.CreateModel(
            name='MeetingWorkshop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dispatch_date', models.DateField(verbose_name='Fecha de despacho')),
                ('estimated_return_date', models.DateField(verbose_name='Fecha estimada de retorno')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comentarios')),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de creación')),
                ('editable', models.BooleanField(default=True, verbose_name='Editable')),
                ('deleted', models.BooleanField(default=False, verbose_name='Eliminado')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Autor')),
                ('log', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='meetings', to='major_equipment.maintenancelog', verbose_name='Solicitud de mantención')),
            ],
            options={
                'verbose_name': 'Cita con el taller',
                'verbose_name_plural': 'Citas con el taller',
            },
        ),
        migrations.CreateModel(
            name='Quotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.PositiveIntegerField(verbose_name='Costo')),
                ('expiration_date', models.DateTimeField(help_text='Fecha hasta la cual la cotización es válida', verbose_name='Fecha de expiración')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comentarios')),
                ('workshop_name', models.CharField(max_length=255, verbose_name='Taller')),
                ('is_favorite', models.BooleanField(default=False, verbose_name='Favorita')),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de creación')),
                ('editable', models.BooleanField(default=True, verbose_name='Editable')),
                ('deleted', models.BooleanField(default=False, verbose_name='Eliminado')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Autor')),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='docs.file', verbose_name='Archivo')),
                ('log', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='major_equipment.maintenancelog', verbose_name='Solicitud de mantención')),
            ],
            options={
                'verbose_name': 'Cotización',
                'verbose_name_plural': 'Cotizaciones',
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_number', models.CharField(max_length=10, unique=True, verbose_name='Número de unidad')),
                ('description', models.CharField(max_length=100, verbose_name='Descripción')),
                ('plate_number', models.CharField(max_length=10, unique=True, validators=[major_equipment.utils.validators.validate_chilean_plate], verbose_name='Placa patente')),
                ('brand', models.CharField(blank=True, max_length=100, null=True, verbose_name='Marca')),
                ('model', models.CharField(blank=True, max_length=100, null=True, verbose_name='Modelo')),
                ('year', models.PositiveIntegerField(blank=True, null=True, verbose_name='Año')),
                ('vehicle_type', models.IntegerField(blank=True, choices=[(1, 'Automóvil'), (2, 'Todoterreno'), (3, 'Camión'), (4, 'Furgoneta'), (5, 'Bus'), (6, 'Motocicleta'), (7, 'Ambulancia'), (8, 'Otro')], null=True, verbose_name='Tipo de vehículo')),
                ('fuel_type', models.IntegerField(blank=True, choices=[(1, 'Bencina'), (2, 'Diésel'), (3, 'Eléctrico')], null=True, verbose_name='Tipo de combustible')),
                ('fuel_tank_capacity', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Capacidad estanque de combustible (L)')),
                ('engine_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='N° de motor')),
                ('chassis_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='N° de chasis')),
                ('tire_size', models.CharField(blank=True, max_length=100, null=True, verbose_name='Tamaño neumático')),
                ('tire_pressure', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Presión neumático (psi)')),
                ('editable', models.BooleanField(default=True, verbose_name='Editable')),
                ('deleted', models.BooleanField(default=False, verbose_name='Eliminado')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='units', to='firebrigade.entity', verbose_name='Entidad asignada')),
                ('padron', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='unit_padron', to='docs.file', verbose_name='Padrón')),
                ('soap', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='unit_soap', to='docs.filevencible', verbose_name='SOAP')),
                ('technical_inspection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='unit_technical_inspection', to='docs.filevencible', verbose_name='Revisión técnica')),
                ('vehicle_permit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='unit_vehicle_permit', to='docs.filevencible', verbose_name='Permiso de circulación')),
            ],
            options={
                'verbose_name': 'Unidad',
                'verbose_name_plural': 'Unidades',
                'permissions': [('view_company_majorequipment', 'Puede ver unidades de su compañía'), ('add_company_majorequipment', 'Puede agregar unidades para su compañía'), ('change_company_majorequipment', 'Puede modificar unidades de su compañía'), ('delete_company_majorequipment', 'Puede eliminar unidades de su compañía')],
            },
        ),
        migrations.AddField(
            model_name='maintenancelog',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='maintenance_logs', to='major_equipment.unit', verbose_name='Unidad'),
        ),
        migrations.CreateModel(
            name='FuelLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de carga')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Cantidad (L)')),
                ('cost', models.IntegerField(verbose_name='Costo')),
                ('station', models.CharField(blank=True, max_length=150, null=True, verbose_name='Estación de servicio')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Observaciones')),
                ('ticket', models.ImageField(blank=True, null=True, upload_to='fuel_tickets', verbose_name='Boleta de combustible')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='fuel_logs', to='major_equipment.unit', verbose_name='Unidad')),
            ],
            options={
                'verbose_name': 'Registro de combustible',
                'verbose_name_plural': 'Registros de combustible',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='UnitImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='unit_images/', verbose_name='Imagen')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='images', to='major_equipment.unit', verbose_name='Unidad')),
            ],
            options={
                'verbose_name': 'Imagen de unidad',
                'verbose_name_plural': 'Imágenes de unidades',
            },
        ),
        migrations.CreateModel(
            name='UnitShipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fuel_level', models.IntegerField(choices=[(0, 'Vacío'), (1, 'Un cuarto de tanque'), (2, 'Medio tanque'), (3, 'Tres cuartos de tanque'), (4, 'Tanque lleno')], default=0, verbose_name='Nivel de combustible')),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de creación')),
                ('editable', models.BooleanField(default=True, verbose_name='Editable')),
                ('deleted', models.BooleanField(default=False, verbose_name='Eliminado')),
                ('hourmeter', models.PositiveIntegerField(verbose_name='Horómetro')),
                ('mileage', models.PositiveIntegerField(verbose_name='Kilometraje')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notas')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Autor')),
                ('meeting_workshop', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='major_equipment.meetingworkshop', verbose_name='Cita con el taller')),
            ],
            options={
                'verbose_name': 'Envío de unidad al taller',
                'verbose_name_plural': 'Envíos de unidades al taller',
            },
        ),
        migrations.CreateModel(
            name='UnitReception',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de creación')),
                ('hourmeter', models.PositiveIntegerField(verbose_name='Horómetro')),
                ('mileage', models.PositiveIntegerField(verbose_name='Kilometraje')),
                ('fuel_level', models.IntegerField(choices=[(0, 'Vacío'), (1, 'Un cuarto de tanque'), (2, 'Medio tanque'), (3, 'Tres cuartos de tanque'), (4, 'Tanque lleno')], default=0, verbose_name='Nivel de combustible')),
                ('reception_ok', models.BooleanField(default=True, verbose_name='Recepción OK')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comentarios')),
                ('cost', models.PositiveIntegerField(verbose_name='Costo')),
                ('editable', models.BooleanField(default=True, verbose_name='Editable')),
                ('deleted', models.BooleanField(default=False, verbose_name='Eliminado')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Autor')),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='docs.file', verbose_name='Factura')),
                ('unit_shipment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='major_equipment.unitshipment', verbose_name='Envío de unidad al taller')),
            ],
            options={
                'verbose_name': 'Recepción de unidad del taller',
                'verbose_name_plural': 'Recepciones de unidades del taller',
            },
        ),
    ]
